<div class="text-center mb-4">
  <%= link_to 'マイグループに戻る', my_groups_groups_path, class: "btn btn-secondary" %>
</div>

<!-- Googleマップの表示エリア -->
<div id="map" style="width: 100%; height: 400px; margin-bottom: 20px;"></div>

<div class="container">
  <div class="row justify-content-center">
    <div class="col-12 col-md-8">
      <!-- チャットメッセージ表示部分 -->
      <div id="chat-box" class="mb-4" style="max-height: 400px; overflow-y: scroll;">
        <% @chats.each do |chat| %>
          <div class="chat-message mb-3" 
               style="display: flex; 
                      justify-content: <%= chat.user == current_user ? 'flex-end' : 'flex-start' %>;
                      align-items: flex-end;">
            
            <div class="chat-bubble p-3 rounded" 
                 style="max-width: 70%; 
                        background-color: <%= chat.user == current_user ? '#dcf8c6' : '#f1f0f0' %>;
                        word-wrap: break-word;
                        border: <%= chat.user == current_user ? 'none' : '2px solid black' %>;">
              
              <% unless chat.user == current_user %>
                <strong><%= chat.user.name %>:</strong>
              <% end %>
              <%= chat.chat %>

              <!-- 削除ボタン -->
              <% if current_user == chat.user || @group.is_owned_by?(current_user) %>
                <div class="text-right mt-2">
                  <%= link_to '削除', group_chat_path(@group, chat), 
                              method: :delete, 
                              data: { confirm: '本当に削除しますか？' }, 
                              class: 'btn btn-sm btn-danger' %>
                </div>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>

      <!-- メッセージ送信フォーム -->
      <%= form_with model: [@group, @chat], local: true do |form| %>
        <div class="form-group">
          <%= form.text_area :chat, rows: 3, placeholder: "メッセージを入力...", class: "form-control" %>
        </div>

        <!-- 住所入力フォーム -->
        <div class="form-group">
          <%= form.label :postal_code, '郵便番号' %>
          <%= form.text_field :postal_code, id: 'postal_code', class: 'form-control' %>
          <%= form.text_field :address, id: 'address', placeholder: '住所が自動で表示されます', class: 'form-control', readonly: true %>
        </div>

        <div class="form-group text-center">
          <%= form.submit "送信", class: "btn btn-primary" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- Google Maps APIの読み込み -->
<script async defer 
  src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&callback=initMap">
</script>

<!-- 地図の初期化関数 -->
<script>
  // Google Maps APIが読み込まれた後に呼ばれる
  function initMap() {
    const map = new google.maps.Map(document.getElementById("map"), {
      center: { lat: 35.6762, lng: 139.6503 }, // 初期位置: 東京
      zoom: 13
    });

    // 郵便番号入力フォームの処理
    const postalCodeInput = document.getElementById('postal_code');
    const addressInput = document.getElementById('address');
    const geocoder = new google.maps.Geocoder();

    postalCodeInput.addEventListener('input', function() {
      const postalCode = postalCodeInput.value.trim();

      if (postalCode.length === 7) {  // 郵便番号が7桁の場合に処理
        fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${postalCode}&key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>`)
          .then(response => response.json())
          .then(data => {
            if (data.status === 'OK') {
              const location = data.results[0].geometry.location;
              const address = data.results[0].formatted_address;

              // 住所とマップを更新
              addressInput.value = address;
              map.setCenter(location);
              new google.maps.Marker({
                map: map,
                position: location,
              });
            } else {
              addressInput.value = '住所が見つかりません';
            }
          })
          .catch(error => {
            console.error('Geocoding API error:', error);
            addressInput.value = 'エラーが発生しました';
          });
      } else {
        addressInput.value = ''; // 郵便番号が7桁でない場合は住所をクリア
      }
    });
  }
</script>
